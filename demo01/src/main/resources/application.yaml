server:
  port: 80

# 数据源
# url: 数据库URL
# username: 数据库账号
# password: 数据库密码
# driverClassName: 数据库驱动类
# initialSize: 初始化时建立物理连接的个数
# maxActive: 最大连接数
# minIdle: 最小连接数
# maxWait: 获取连接时最大等待时间，单位毫秒
# useUnfairLock: 配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，所以使用非公平锁
# validationQuery: 检测连接是否有效SQL
# testOnBorrow: 申请连接时执行validationQuery检测连接是否有效，设置为true会影响性能
# testOnReturn: 退还连接时执行validationQuery检测连接是否有效，设置为true会影响性能
# testWhileIdle: 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
# timeBetweenEvictionRunsMillis: 两个含义：1、Destroy线程会检测连接的间隔时间 2、testWhileIdle的判断依据
# minEvictableIdleTimeMillis: 一个连接在池中最小生存的时间，单位是毫秒
# filters: 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall

spring:
    datasource:
        name: test
        url: jdbc:mysql://127.0.0.1:3306/test
        username: root
        password: root
        #druid相关配置
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        filters: stat
        maxActive: 20
        initialSize: 1
        maxWait: 60000
        minIdle: 1
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20

## 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
mybatis:
  mapper-locations: classpath:mapping/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
 # type-aliases-package: com.nasus.mybatisxml.model  # 注意：对应实体类的路径

#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
